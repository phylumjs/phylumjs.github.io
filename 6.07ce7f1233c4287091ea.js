(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{318:function(s,a,t){"use strict";t.r(a);var e=function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("b-container",{staticClass:"document"},[t("h1",[s._v("Webpack Task")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://coveralls.io/github/phylumjs/webpack-task?branch=master",target:"_blank"}},[t("img",{attrs:{src:"https://coveralls.io/repos/github/phylumjs/webpack-task/badge.svg?branch=master",alt:"Coverage Status"}})]),s._v(" "),t("a",{attrs:{href:"https://travis-ci.org/phylumjs/webpack-task",target:"_blank"}},[t("img",{attrs:{src:"https://travis-ci.org/phylumjs/webpack-task.svg?branch=master",alt:"Build Status"}})]),s._v(" "),t("img",{attrs:{src:"https://img.shields.io/npm/v/@phylum/webpack-task.svg",alt:"Version"}}),s._v(" "),t("img",{attrs:{src:"https://img.shields.io/npm/l/@phylum/webpack-task.svg",alt:"License"}})]),s._v(" "),t("p",[s._v("A pipeline task that bundles code using webpack.")]),s._v(" "),t("h2",[s._v("Installation")]),s._v(" "),t("pre",[t("code",{staticClass:"language-bash"},[s._v("npm i @phylum/webpack-task webpack")])]),s._v(" "),t("h2",[s._v("Usage")]),s._v(" "),t("pre",[t("code",{staticClass:"language-js"},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" createWebpackTask = "),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'@phylum/webpack-task'")]),s._v(")\n\n"),t("span",{staticClass:"hljs-comment"},[s._v("// Create a new pipeline task:")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" webpackTask = createWebpackTask(config[, webpack])")])]),s._v(" "),t("ul",[t("li",[s._v("config "),t("code",[s._v("<webpack.Compiler> | <object> | <function>")]),s._v(" - This can be a webpack compiler, a webpack config or a function that creates one of these."),t("ul",[t("li",[s._v("ctx "),t("code",[s._v("<Context>")]),s._v(" - The pipeline context of the webpack task is passed with the first argument.")]),s._v(" "),t("li",[s._v("return "),t("code",[s._v("<webpack.Compiler> | <object> | <Promise>")]),s._v(" - Return a webpack compiler, config or a promise that resolves to one of these.")])])]),s._v(" "),t("li",[s._v("webpack "),t("code",[s._v("<webpack>")]),s._v(" - Optional. Specify a specific webpack module to use instead of the default installed one.")])]),s._v(" "),t("h3",[s._v("Integration")]),s._v(" "),t("p",[s._v("The webpack task can be used like a pipeline task."),t("br"),s._v("\nIt will resolve to the webpack stats emitted by the compiler. In case of a critical compiler error, the task will reject with that error.")]),s._v(" "),t("pre",[t("code",{staticClass:"language-js"},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" webpackTask = createWebpackTask({\n    "),t("span",{staticClass:"hljs-comment"},[s._v("// Webpack config...")]),s._v("\n})\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("myTask")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("ctx")]),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stats = "),t("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" ctx.use(webpackTask)\n}")])]),s._v(" "),t("h3",[s._v("Passing custom options")]),s._v(" "),t("p",[s._v("To customize the webpack configuration based on pipeline data, pass a function with the config argument:")]),s._v(" "),t("pre",[t("code",{staticClass:"language-js"},[t("span",{staticClass:"hljs-comment"},[s._v("// For instance, set the mode:")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" webpackTask = createWebpackTask("),t("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" ctx => {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n        "),t("span",{staticClass:"hljs-attr"},[s._v("mode")]),s._v(": ctx.pipeline.data.mode,\n        "),t("span",{staticClass:"hljs-attr"},[s._v("watch")]),s._v(": ctx.pipeline.data.watch\n        "),t("span",{staticClass:"hljs-comment"},[s._v("// webpack config...")]),s._v("\n    }\n})\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" pipeline = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Pipeline(webpackTask)\npipeline.data.mode = "),t("span",{staticClass:"hljs-string"},[s._v("'development'")]),s._v("\npipeline.data.watch = "),t("span",{staticClass:"hljs-literal"},[s._v("true")])])]),s._v(" "),t("h3",[s._v("Watch mode")]),s._v(" "),t("p",[s._v("To enable watch mode use "),t("a",{attrs:{href:"https://webpack.js.org/configuration/watch/",target:"_blank"}},[s._v("webpack's watch options")]),s._v(". Each time, an updates is emitted, the task will push a new state.")])])};e._withStripped=!0;t(337);var c=t(52),n=Object(c.a)({},e,[],!1,null,null,null);n.options.__file="src/pages/ecosystem-webpack-task.md";a.default=n.exports},327:function(s,a,t){},337:function(s,a,t){"use strict";var e=t(327);t.n(e).a}}]);
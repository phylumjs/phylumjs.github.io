(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{315:function(s,a,t){"use strict";t.r(a);var n=function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("b-container",{staticClass:"document"},[t("h1",[s._v("Writing a CLI")]),s._v(" "),t("p",[s._v("PhylumJS does not provide a cli by itself. Instead it provides a utility for writing a highly customizable pipeline cli."),t("br")]),s._v(" "),t("p",[s._v("The following node module ("),t("code",[s._v("pipeline.js")]),s._v(") implements a very basic cli:")]),s._v(" "),t("pre",[t("code",{staticClass:"language-js"},[t("span",{staticClass:"hljs-meta"},[s._v("#!/usr/bin/env node")]),s._v("\n"),t("span",{staticClass:"hljs-meta"},[s._v("'use strict'")]),s._v("\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" {cli} = "),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'@phylum/pipeline'")]),s._v(")\n\ncli("),t("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" ctx => {\n    "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v("'Hello World!'")]),s._v(")\n})")])]),s._v(" "),t("pre",[t("code",{staticClass:"language-bash"},[s._v("node pipeline")])]),s._v(" "),t("h3",[s._v("Command line args")]),s._v(" "),t("p",[s._v("Command line args can be parsed from within the pipeline."),t("br"),s._v("\nThe following example uses "),t("a",{attrs:{href:"https://www.npmjs.com/package/command-line-args",target:"_blank"}},[s._v("this package")]),s._v(" for parsing.")]),s._v(" "),t("pre",[t("code",{staticClass:"language-js"},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" parse = "),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'command-line-args'")]),s._v(")\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("args")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("ctx")]),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" parse([\n        {"),t("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'message'")]),s._v(", "),t("span",{staticClass:"hljs-attr"},[s._v("alias")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'m'")]),s._v("}\n    ])\n}\n\ncli("),t("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" ctx => {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" {message} = "),t("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" ctx.use(args)\n\n    "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(message)\n})")])]),s._v(" "),t("pre",[t("code",{staticClass:"language-bash"},[s._v("node pipeline -m "),t("span",{staticClass:"hljs-string"},[s._v('"Hello World!"')])])])])};n._withStripped=!0;var l=t(52),i=Object(l.a)({},n,[],!1,null,null,null);i.options.__file="src/pages/manual-cli.md";a.default=i.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{206:function(s,a,t){"use strict";t.r(a);var e=function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("app-document",[t("h1",[s._v("Events")]),s._v(" "),t("p",[s._v("PhylumJS includes a typed event system that can be used to communicate with tasks or to implement hooks.")]),s._v(" "),t("h2",[t("code",[s._v("Event")])]),s._v(" "),t("p",[s._v("Events are published on specific channels."),t("br"),s._v("\nChannels can be any value that can be used as a key in a "),t("code",[s._v("Map")]),s._v(" object, however it is recommended to use the event class itself as channel.")]),s._v(" "),t("pre",[t("code",{staticClass:"language-ts"},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { Event } "),t("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),t("span",{staticClass:"hljs-string"},[s._v("'@phylum/pipeline'")]),s._v(";\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" MyEvent "),t("span",{staticClass:"hljs-keyword"},[s._v("implements")]),s._v(" Event {\n    "),t("span",{staticClass:"hljs-comment"},[s._v("// It is recommended to use the class itself as channel:")]),s._v("\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" readonly channel = MyEvent;\n}")])]),s._v(" "),t("h2",[t("code",[s._v("EventAggregator")])]),s._v(" "),t("p",[s._v("An event aggregator is a pub/sub system for events.")]),s._v(" "),t("pre",[t("code",{staticClass:"language-ts"},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { EventAggregator } "),t("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),t("span",{staticClass:"hljs-string"},[s._v("'@phylum/pipeline'")]),s._v(";\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" ea = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" EventAggregator();")])]),s._v(" "),t("h4",[s._v("publish / subscribe")]),s._v(" "),t("pre",[t("code",{staticClass:"language-ts"},[s._v("ea.publish("),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" MyEvent());\n\nea.subscribe<MyEvent>(MyEvent, "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("e")]),s._v(" =>")]),s._v(" {\n    "),t("span",{staticClass:"hljs-comment"},[s._v('// "e" is an instance of MyEvent')]),s._v("\n});")])]),s._v(" "),t("h2",[t("code",[s._v("EventClient")])]),s._v(" "),t("p",[s._v("An event client is an object that can be attached to multiple event aggregators."),t("br"),s._v("\nEvent clients can subscribe or publish to multiple event aggregators with a simple api.")]),s._v(" "),t("pre",[t("code",{staticClass:"language-ts"},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { Event, EventClient } "),t("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),t("span",{staticClass:"hljs-string"},[s._v("'@phylum/pipeline'")]),s._v(";\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" Ping "),t("span",{staticClass:"hljs-keyword"},[s._v("implements")]),s._v(" Event {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" readonly channel = Ping;\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" Pong "),t("span",{staticClass:"hljs-keyword"},[s._v("implements")]),s._v(" Event {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" readonly channel = Pong;\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" Echo "),t("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" EventClient {\n    "),t("span",{staticClass:"hljs-comment"},[s._v("// This function is called when an event aggregator is attached:")]),s._v("\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("protected")]),s._v(" * subscribe(ea: EventAggregator): Iterable<EventSubscription> {\n        "),t("span",{staticClass:"hljs-comment"},[s._v("// Allow the base class to subscribe to events:")]),s._v("\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("yield")]),s._v(" * "),t("span",{staticClass:"hljs-keyword"},[s._v("super")]),s._v(".subscribe();\n\n        "),t("span",{staticClass:"hljs-comment"},[s._v("// Subscriptions will be disposed automatically")]),s._v("\n        "),t("span",{staticClass:"hljs-comment"},[s._v("// when the event aggregator is detached:")]),s._v("\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("yield")]),s._v(" ea.subscribe(Ping, "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" {\n            "),t("span",{staticClass:"hljs-comment"},[s._v("// Publish to all attached event aggregators:")]),s._v("\n            "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".publish("),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Pong());\n        });\n    }\n}\n\nea.attach("),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Echo());\n\nea.subscribe(Pong, "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" {\n    "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v("'Pong!'")]),s._v(");\n});\n\nea.publish("),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Ping());")])])])};e._withStripped=!0;var n=t(15),l=Object(n.a)({},e,[],!1,null,null,null);l.options.__file="manual/events.md";a.default=l.exports}}]);